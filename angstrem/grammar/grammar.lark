
main: _SP? ( stmt _SP? )*

?stmt: decl
     | expr

?decl: decl_func

decl_func: "fn" _SP ID _SP? "(" _SP? func_args? ")" _SP? func_body

func_args: ID _SP? ( "," _SP? ID _SP? )*

func_body: expr

?expr: atom
     | atom _SP? "+" _SP? expr -> plus
     | call
     | block

call: ID _SP? "(" _SP? call_args? ")"

call_args: expr _SP? ( "," _SP? expr _SP? )*

block: "{" _SP? _block_body? "}"

_block_body: expr _SP? ( _BLOCK_DELIM _SP? expr _SP? )*

_BLOCK_DELIM: ";" | "\n"

?atom: NUMBER
     | ID

ID: /\w+(\w|\d|_)*/

NUMBER: /\d+/

_SP: /\s+/m
